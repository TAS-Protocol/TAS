import { useSignTypedData } from 'wagmi'


const domain = {
  name: "EAS Attestation",
  version: "1.0.0",
  chainId: 420, // Ethereum chain ID
  verifyingContract: "0x4200000000000000000000000000000000000021", // Contract address
};

const message = {
  version: 1, // Specify the version
  schema: "0xe038cd96af4cfe0ab2b4b2218a1f3fd3a7c67b65a5de538fa2cf445b9ceab681",
  recipient: "0x84656be33Fa1B05eC62D7A059f75C0DE233F1530",
  time: "1693961858", // Unix timestamp as a string
  expirationTime: 0, // Specify the expiration time
  revocable: true, // Specify whether it's revocable or not
  refUID: "0x0000000000000000000000000000000000000000000000000000000000000000",
  data: "0xa8293d6629af621d040f5015426cfd80b2fb749092e0ac01f00908d4a8ee6d3900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000007646973636f72640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077a616672616e6e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077z"
};

const primaryType = "Attest"; // Specify the primary type

const types = {
  Attest: [
    { name: "version", type: "uint16" },
    { name: "schema", type: "bytes32" },
    { name: "recipient", type: "address" },
    { name: "time", type: "uint64" },
    { name: "expirationTime", type: "uint64" },
    { name: "revocable", type: "bool" },
    { name: "refUID", type: "bytes32" },
    { name: "data", type: "bytes" },
  ],
};


useSignTypedData({
      domain,
      message,
      primaryType: primaryType,
      types,
    })